# Generated by: Neurodocker version 0.7.0+15.ga4940e3.dirty
# Latest release: Neurodocker version 0.7.0
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/ReproNim/neurodocker
# 
# Timestamp: 2020/08/23 19:31:23 UTC

FROM neurodebian:nd16.04

USER root

ARG DEBIAN_FRONTEND="noninteractive"

ENV LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8" \
    ND_ENTRYPOINT="/neurodocker/startup.sh"
RUN export ND_ENTRYPOINT="/neurodocker/startup.sh" \
    && apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           apt-utils \
           bzip2 \
           ca-certificates \
           curl \
           locales \
           unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG="en_US.UTF-8" \
    && chmod 777 /opt && chmod a+s /opt \
    && mkdir -p /neurodocker \
    && if [ ! -f "$ND_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT" \
    &&   echo 'set -e' >> "$ND_ENTRYPOINT" \
    &&   echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT" \
    &&   echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT"; \
    fi \
    && chmod -R 777 /neurodocker && chmod a+s /neurodocker

ENTRYPOINT ["/neurodocker/startup.sh"]

RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           convert3d \
           ants \
           fsl \
           fslview \
           gcc \
           g++ \
           graphviz \
           tree \
           git-annex-standalone \
           vim \
           emacs-nox \
           nano \
           less \
           ncdu \
           tig \
           git-annex-remote-rclone \
           octave \
           netbase \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN sed -i '$isource /etc/fsl/fsl.sh' $ND_ENTRYPOINT

RUN test "$(getent passwd neuro)" || useradd --no-user-group --create-home --shell /bin/bash neuro
USER neuro

ENV CONDA_DIR="/opt/miniconda-latest" \
    PATH="/opt/miniconda-latest/bin:$PATH"
RUN export PATH="/opt/miniconda-latest/bin:$PATH" \
    && echo "Downloading Miniconda installer ..." \
    && conda_installer="/tmp/miniconda.sh" \
    && curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && bash "$conda_installer" -b -p /opt/miniconda-latest \
    && rm -f "$conda_installer" \
    && conda update -yq -nbase conda \
    && conda config --system --prepend channels conda-forge \
    && conda config --system --set auto_update_conda false \
    && conda config --system --set show_channel_urls true \
    && sync && conda clean -y --all && sync \
    && conda create -y -q --name neuro \
    && conda install -y -q --name neuro \
           "python=3.6" \
           "pytest" \
           "jupyter" \
           "jupyterlab" \
           "jupyter_contrib_nbextensions" \
           "traits" \
           "pandas" \
           "matplotlib" \
           "scikit-learn" \
           "scikit-image" \
           "seaborn" \
           "nbformat" \
           "nb_conda" \
    && sync && conda clean -y --all && sync \
    && bash -c "source activate neuro \
    &&   pip install --no-cache-dir  \
             "bootstrapped==0.0.2" \
             "certifi==2019.11.28" \
             "chardet==3.0.4" \
             "click==7.1.1" \
             "cycler==0.10.0" \
             "decorator==4.4.2" \
             "descartes==1.1.0" \
             "etelemetry==0.1.2" \
             "filelock==3.0.12" \
             "funcsigs==1.0.2" \
             "future==0.18.2" \
             "idna==2.9" \
             "isodate==0.6.0" \
             "joblib==0.14.1" \
             "kiwisolver==1.1.0" \
             "lxml==4.5.0" \
             "matplotlib==3.1.2" \
             "mizani==0.6.0" \
             "networkx==2.4" \
             "neurdflib==5.0.1" \
             "nibabel==2.5.1" \
             "nilearn==0.6.1" \
             "nipype==1.4.2" \
             "numpy==1.17.4" \
             "packaging==20.3" \
             "palettable==3.3.0" \
             "pandas==0.25.3" \
             "patsy==0.5.1" \
             "pip==19.0.3" \
             "plotnine==0.6.0" \
             "plotly" \
             "prov==1.5.3" \
             "pydot==1.4.1" \
             "pydotplus==2.0.2" \
             "pyparsing==2.4.6" \
             "python-dateutil==2.8.1" \
             "pytz==2019.3" \
             "rdflib==4.2.2" \
             "requests==2.23.0" \
             "scikit-learn==0.22.2.post1" \
             "scipy==1.3.2" \
             "setuptools==40.8.0" \
             "simplejson==3.17.0" \
             "six==1.14.0" \
             "sklearn==0" \
             "statsmodels==0.11.1" \
             "traits==6.0.0" \
             "urllib3==1.25.8" \
             "xmltodict==0.12.0" \
             "pybids" \
             "datalad[full]" \
             "nipy" \
             "duecredit" \
             "nbval"" \
    && rm -rf ~/.cache/pip/* \
    && sync \
    && sed -i '$isource activate neuro' $ND_ENTRYPOINT

RUN bash -c 'source activate neuro && jupyter nbextension enable exercise2/main && jupyter nbextension enable spellchecker/main'

USER root

RUN mkdir /data && chmod 777 /data && chmod a+s /data

RUN mkdir /output && chmod 777 /output && chmod a+s /output

USER neuro

RUN bash -c 'source activate neuro \
        && cd /data \
        && datalad install -r ///workshops/nih-2017/ds000114 \
        && cd ds000114 \
        && datalad update -r \
        && datalad get -r sub-01/ses-test/anat sub-01/ses-test/func/*fingerfootlips*'

RUN curl -L https://files.osf.io/v1/resources/fvuh8/providers/osfstorage/580705089ad5a101f17944a9 -o /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz \
        && tar xf /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz -C /data/ds000114/derivatives/fmriprep/. \
        && rm /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz \
        && find /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c -type f -not -name ?mm_T1.nii.gz -not -name ?mm_brainmask.nii.gz -not -name ?mm_tpm*.nii.gz -delete

COPY [".", "/home/neuro/nipype_tutorial"]

USER root

RUN chown -R neuro /home/neuro/nipype_tutorial

RUN rm -rf /opt/conda/pkgs/*

USER neuro

RUN mkdir -p ~/.jupyter && echo c.NotebookApp.ip = \"0.0.0.0\" > ~/.jupyter/jupyter_notebook_config.py

WORKDIR /home/neuro/nipype_tutorial

CMD ["jupyter-notebook"]

RUN echo '{ \
    \n  "pkg_manager": "apt", \
    \n  "instructions": [ \
    \n    [ \
    \n      "base", \
    \n      "neurodebian:nd16.04" \
    \n    ], \
    \n    [ \
    \n      "install", \
    \n      [ \
    \n        "convert3d", \
    \n        "ants", \
    \n        "fsl", \
    \n        "fslview", \
    \n        "gcc", \
    \n        "g++", \
    \n        "graphviz", \
    \n        "tree", \
    \n        "git-annex-standalone", \
    \n        "vim", \
    \n        "emacs-nox", \
    \n        "nano", \
    \n        "less", \
    \n        "ncdu", \
    \n        "tig", \
    \n        "git-annex-remote-rclone", \
    \n        "octave", \
    \n        "netbase" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "add_to_entrypoint", \
    \n      "source /etc/fsl/fsl.sh" \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "neuro" \
    \n    ], \
    \n    [ \
    \n      "miniconda", \
    \n      { \
    \n        "conda_install": [ \
    \n          "python=3.6", \
    \n          "pytest", \
    \n          "jupyter", \
    \n          "jupyterlab", \
    \n          "jupyter_contrib_nbextensions", \
    \n          "traits", \
    \n          "pandas", \
    \n          "matplotlib", \
    \n          "scikit-learn", \
    \n          "scikit-image", \
    \n          "seaborn", \
    \n          "nbformat", \
    \n          "nb_conda" \
    \n        ], \
    \n        "pip_install": [ \
    \n          "bootstrapped==0.0.2", \
    \n          "certifi==2019.11.28", \
    \n          "chardet==3.0.4", \
    \n          "click==7.1.1", \
    \n          "cycler==0.10.0", \
    \n          "decorator==4.4.2", \
    \n          "descartes==1.1.0", \
    \n          "etelemetry==0.1.2", \
    \n          "filelock==3.0.12", \
    \n          "funcsigs==1.0.2", \
    \n          "future==0.18.2", \
    \n          "idna==2.9", \
    \n          "isodate==0.6.0", \
    \n          "joblib==0.14.1", \
    \n          "kiwisolver==1.1.0", \
    \n          "lxml==4.5.0", \
    \n          "matplotlib==3.1.2", \
    \n          "mizani==0.6.0", \
    \n          "networkx==2.4", \
    \n          "neurdflib==5.0.1", \
    \n          "nibabel==2.5.1", \
    \n          "nilearn==0.6.1", \
    \n          "nipype==1.4.2", \
    \n          "numpy==1.17.4", \
    \n          "packaging==20.3", \
    \n          "palettable==3.3.0", \
    \n          "pandas==0.25.3", \
    \n          "patsy==0.5.1", \
    \n          "pip==19.0.3", \
    \n          "plotnine==0.6.0", \
    \n          "plotly", \
    \n          "prov==1.5.3", \
    \n          "pydot==1.4.1", \
    \n          "pydotplus==2.0.2", \
    \n          "pyparsing==2.4.6", \
    \n          "python-dateutil==2.8.1", \
    \n          "pytz==2019.3", \
    \n          "rdflib==4.2.2", \
    \n          "requests==2.23.0", \
    \n          "scikit-learn==0.22.2.post1", \
    \n          "scipy==1.3.2", \
    \n          "setuptools==40.8.0", \
    \n          "simplejson==3.17.0", \
    \n          "six==1.14.0", \
    \n          "sklearn==0", \
    \n          "statsmodels==0.11.1", \
    \n          "traits==6.0.0", \
    \n          "urllib3==1.25.8", \
    \n          "xmltodict==0.12.0", \
    \n          "pybids", \
    \n          "datalad[full]", \
    \n          "nipy", \
    \n          "duecredit", \
    \n          "nbval" \
    \n        ], \
    \n        "create_env": "neuro", \
    \n        "activate": true \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "run_bash", \
    \n      "source activate neuro && jupyter nbextension enable exercise2/main && jupyter nbextension enable spellchecker/main" \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "root" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "mkdir /data && chmod 777 /data && chmod a+s /data" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "mkdir /output && chmod 777 /output && chmod a+s /output" \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "neuro" \
    \n    ], \
    \n    [ \
    \n      "run_bash", \
    \n      "source activate neuro\\n    && cd /data\\n    && datalad install -r ///workshops/nih-2017/ds000114\\n    && cd ds000114\\n    && datalad update -r\\n    && datalad get -r sub-01/ses-test/anat sub-01/ses-test/func/*fingerfootlips*" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "curl -L https://files.osf.io/v1/resources/fvuh8/providers/osfstorage/580705089ad5a101f17944a9 -o /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz\\n    && tar xf /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz -C /data/ds000114/derivatives/fmriprep/.\\n    && rm /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz\\n    && find /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c -type f -not -name ?mm_T1.nii.gz -not -name ?mm_brainmask.nii.gz -not -name ?mm_tpm*.nii.gz -delete" \
    \n    ], \
    \n    [ \
    \n      "copy", \
    \n      [ \
    \n        ".", \
    \n        "/home/neuro/nipype_tutorial" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "root" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "chown -R neuro /home/neuro/nipype_tutorial" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "rm -rf /opt/conda/pkgs/*" \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "neuro" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "mkdir -p ~/.jupyter && echo c.NotebookApp.ip = \\\"0.0.0.0\\\" > ~/.jupyter/jupyter_notebook_config.py" \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/home/neuro/nipype_tutorial" \
    \n    ], \
    \n    [ \
    \n      "cmd", \
    \n      [ \
    \n        "jupyter-notebook" \
    \n      ] \
    \n    ] \
    \n  ] \
    \n}' > /neurodocker/neurodocker_specs.json
